public final class io/github/airflux/commons/collections/extensions/ExtensionsKt {
	public static final fun mapToSet (Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Ljava/util/Set;
}

public abstract class io/github/airflux/commons/collections/list/AbstractStrictlyMappedListElement : io/github/airflux/commons/collections/list/StrictlyMappedList$Element {
	public fun <init> (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)V
	public fun getKey ()Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;
}

public final class io/github/airflux/commons/collections/list/NonEmptyList : java/util/List, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/commons/collections/list/NonEmptyList$Companion;
	public fun add (ILjava/lang/Object;)V
	public fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/commons/collections/list/NonEmptyList;
	public fun clear ()V
	public fun contains (Ljava/lang/Object;)Z
	public static fun contains-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static fun containsAll-impl (Ljava/util/List;Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public static final fun flatMap-z-8PWvM (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public fun get (I)Ljava/lang/Object;
	public static fun get-impl (Ljava/util/List;I)Ljava/lang/Object;
	public fun getSize ()I
	public static fun getSize-impl (Ljava/util/List;)I
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun indexOf (Ljava/lang/Object;)I
	public static fun indexOf-impl (Ljava/util/List;Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Ljava/util/List;)Z
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl (Ljava/util/List;)Ljava/util/Iterator;
	public fun lastIndexOf (Ljava/lang/Object;)I
	public static fun lastIndexOf-impl (Ljava/util/List;Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public static fun listIterator-impl (Ljava/util/List;)Ljava/util/ListIterator;
	public static fun listIterator-impl (Ljava/util/List;I)Ljava/util/ListIterator;
	public static final fun map-z-8PWvM (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun plus-58KGBhE (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun plus-z-8PWvM (Ljava/util/List;Ljava/lang/Iterable;)Ljava/util/List;
	public static final fun plus-z-8PWvM (Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
	public fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun replaceAll (Ljava/util/function/UnaryOperator;)V
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public synthetic fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public static fun subList-impl (Ljava/util/List;II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
	public static final fun valueOf--65dqkY (Ljava/util/List;)Ljava/util/List;
	public static final fun valueOf-rWNQfXk (Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
}

public final class io/github/airflux/commons/collections/list/NonEmptyList$Companion {
	public final fun flatMap-z-8PWvM (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun map-z-8PWvM (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public final fun plus-58KGBhE (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public final fun plus-z-8PWvM (Ljava/util/List;Ljava/lang/Iterable;)Ljava/util/List;
	public final fun plus-z-8PWvM (Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
	public final fun valueOf--65dqkY (Ljava/util/List;)Ljava/util/List;
	public final fun valueOf-rWNQfXk (Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
}

public final class io/github/airflux/commons/collections/list/NonEmptyListKt {
	public static final fun flatMap-8MW8Lq4 (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun map-8MW8Lq4 (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun nonEmptyListOf (Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
	public static final fun nonEmptyListOf (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
	public static final fun plus-8MW8Lq4 (Ljava/util/List;Ljava/lang/Iterable;)Ljava/util/List;
	public static final fun plus-8MW8Lq4 (Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
	public static final fun plus-dNto3vc (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun toNonEmptyListOrNull (Ljava/util/List;)Ljava/util/List;
}

public abstract interface class io/github/airflux/commons/collections/list/StrictlyMappedList {
	public abstract fun contains (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)Z
	public abstract fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)Lio/github/airflux/commons/collections/list/StrictlyMappedList$Element;
	public abstract fun isEmpty ()Z
	public fun plus (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Element;)Lio/github/airflux/commons/collections/list/StrictlyMappedList;
}

public abstract interface class io/github/airflux/commons/collections/list/StrictlyMappedList$Element : io/github/airflux/commons/collections/list/StrictlyMappedList {
	public fun contains (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)Z
	public fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun get (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)Lio/github/airflux/commons/collections/list/StrictlyMappedList$Element;
	public abstract fun getKey ()Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;
	public fun isEmpty ()Z
}

public final class io/github/airflux/commons/collections/list/StrictlyMappedList$Empty : io/github/airflux/commons/collections/list/StrictlyMappedList {
	public static final field INSTANCE Lio/github/airflux/commons/collections/list/StrictlyMappedList$Empty;
	public fun contains (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)Z
	public fun equals (Ljava/lang/Object;)Z
	public fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun get (Lio/github/airflux/commons/collections/list/StrictlyMappedList$Key;)Lio/github/airflux/commons/collections/list/StrictlyMappedList$Element;
	public fun hashCode ()I
	public fun isEmpty ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/commons/collections/list/StrictlyMappedList$Key {
}

public final class io/github/airflux/commons/collections/list/StrictlyMappedListKt {
	public static final fun isNotEmpty (Lio/github/airflux/commons/collections/list/StrictlyMappedList;)Z
}

public abstract class io/github/airflux/commons/collections/map/AbstractCaseInsensitiveMutableMap : java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun clear ()V
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public final fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	protected final fun getTarget ()Ljava/util/Map;
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public final fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/String;)Ljava/lang/Object;
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class io/github/airflux/commons/collections/map/CaseInsensitiveMutableHashMap : io/github/airflux/commons/collections/map/AbstractCaseInsensitiveMutableMap {
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/commons/collections/map/CaseInsensitiveMutableHashMapKt {
	public static final fun caseInsensitiveMutableHashMapOf (Ljava/lang/Iterable;)Ljava/util/Map;
	public static final fun caseInsensitiveMutableHashMapOf (Ljava/util/Iterator;)Ljava/util/Map;
	public static final fun caseInsensitiveMutableHashMapOf ([Lkotlin/Pair;)Ljava/util/Map;
}

